import { useState, useEffect } from "react";
import Head from "next/head";
import { signIn, signOut, getSession } from "next-auth/client";
import TweetEmbed from "react-tweet-embed";
import UserProfile from "../components/UserProfile";
import Loader from "../components/Loader";

export default function Home({ session }) {
  const [statuses, setStatuses] = useState();
  const [userProfile, setUserProfile] = useState();

  // Function to fetch user profile information
  const fetchProfile = async () => {
    const name = session?.user?.name;
    const results = await fetch("/api/twitter/getUser", {
      method: "POST",
      body: JSON.stringify({
        name,
      }),
    }).then((res) => res.json());

    setUserProfile(results.data);
    setStatuses(results.status);
  };

  useEffect(() => {
    fetchProfile();
  }, [session]);

  return (
    <div>
      <Head>
        <title>Tailboost Assignment</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {!session && (
        <>
          <div className="text-center mt-20">
            <h1 class="mb-4 text-4xl font-extrabold leading-none tracking-tight text-gray-900 md:text-5xl lg:text-6xl">
              Welcome to Twitter Oauth Login Page :)
            </h1>
            <p class="mb-6 text-lg font-normal text-gray-500 lg:text-xl sm:px-16 xl:px-48">
              Please click on Log-in button to continue!
            </p>
            <button
              onClick={() => signIn()}
              class="inline-flex items-center justify-center px-5 py-3 text-base font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 dark:focus:ring-blue-900"
            >
              Log in
              <svg
                class="w-3.5 h-3.5 ms-2 rtl:rotate-180"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 14 10"
              >
                <path
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M1 5h12m0 0L9 1m4 4L9 9"
                />
              </svg>
            </button>
          </div>
        </>
      )}
      {session && (
        <>
          <div className="flex justify-between items-center py-2 px-5 bg-gray-50">
            <p className="sm:text-xl  font-bold">Welcome {session.user.name}</p>
            <button
              onClick={() => signOut()}
              className="bg-red-200 p-1.5 rounded hover:bg-red-400 font-semibold"
            >
              Log out
            </button>
          </div>

          {statuses === "Ok" ? (
            <>
              <UserProfile userProfile={userProfile} />
              <div className="max-w-screen-md mx-auto mt-10 px-3">
                {userProfile?.status?.id_str ? (
                  <>
                    <p className="text-xl font-bold py-4">Recent Tweets</p>
                     {/* used TweetEmbe npm package for displaying the user's recent tweet using their tweet */}
                    <TweetEmbed tweetId={userProfile?.status?.id_str} />
                  </>
                ) : (
                  <p>No recent tweets found...</p>
                )}
              </div>
            </>
          ) : (
            <Loader />
          )}
        </>
      )}
    </div>
  );
}

// Function to get server-side props (session) for the home page
export async function getServerSideProps(context) {
  const session = await getSession(context);
  return {
    props: {
      session,
    },
  };
}
